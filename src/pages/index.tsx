import Head from 'next/head';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import { useQuery } from '@tanstack/react-query';
import { useEffect, useState } from 'react';
import { Table } from '@/components/Table';
import { Pagination } from '@/components/Pagination';
import { SearchBar } from '@/components/SearchBar';
import { Payout, PayoutData, query as QueryType } from '@/types';
import { Title } from '@/components/Title';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const [query, setQuery] = useState<QueryType>({ page: 1, limit: 10 });
  const [searchQuery, setSearchQuery] = useState('');
  const [payoutResults, setPayoutResults] = useState<PayoutData[]>([]);

  const { data, isLoading, isError, isFetched, refetch } = useQuery<Payout>({
    queryKey: ['payouts', query, searchQuery],
    queryFn: async () => {
      const fetchUrl = searchQuery
        ? `https://theseus-staging.lithium.ventures/api/v1/analytics/tech-test/search?query=${searchQuery}`
        : `https://theseus-staging.lithium.ventures/api/v1/analytics/tech-test/payouts?page=${query.page}&limit=${query.limit}`;

      const response = await fetch(fetchUrl);
      return response.json();
    },
  });

  useEffect(() => {
    if (data && data.data) {
      setPayoutResults(data.data);
    }
  }, [data, searchQuery]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={`${styles.main} ${inter.className}`}>
          <Title styles={styles.title} text="Payouts" size="h1" />
          <div className={styles.header}>
            <Title styles={styles.subtitle} text="Payout History" size="h2" />
            <SearchBar setSearchQuery={setSearchQuery} />
          </div>
          <Table
            results={payoutResults}
            isLoading={isLoading}
            isError={isError}
          />
          {data && <Pagination query={query} setQuery={setQuery} />}
      </main>
    </>
  );
}
